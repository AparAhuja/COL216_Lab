ROW_ACCESS_DELAY = 6, COL_ACCESS_DELAY = 4

addi $t0 $t0 5
lw $t0 508($zero)
addi $t1 $t0 508
sw $t0 0($t1)
add $a0 $zero $t1

_______________________________________________________________

Output:

WARNING: Extra command line arguments were provided! Only three arguments are expected from the user.
Refer to README.md for more details..
Cycle 1:
Instruction executed: addi $t0 $t0 5
Register modified: $t0 = 5 (0x00000005)

Cycle 2: Instruction executed: lw $t0 508($zero) (DRAM request issued)
Cycle 3-8: ACTIVATION: Copying from DRAM to ROW BUFFER (Row (Data section): 0-1023)
Cycle 9-12: READ: Register value updated: $t0 = 0 (0x00000000)

Cycle 13:
Instruction executed: addi $t1 $t0 508
Register modified: $t1 = 508 (0x000001fc)

Cycle 14: Instruction executed: sw $t0 0($t1) (DRAM request issued)
Cycle 15-18: WRITE: Data updated in ROW BUFFER: Memory Address (Data section): 508-511 = 0 (0x00000000)

Cycle 15:
Instruction executed: add $a0 $zero $t1
Register modified: $a0 = 508 (0x000001fc)

Final writeback:
Cycle 19: DRAM request issued
Cycle 20-25: WRITEBACK: Copying from ROW BUFFER to DRAM (Row (Data section) : 0-1023)
______________________________________________________________________________________________________

Total clock cycles: 25

Number of instructions executed for each type are given below:-
add: 1, addi: 2, beq: 0, bne: 0, j: 0
lw: 1, mul: 0, slt: 0, sub: 0, sw: 1

Memory content at the end of the execution (Data section):
508-511 = 0 (0x00000000)

Total ROW BUFFER operations (writeback/activation/read/write): 4
Number of times data was written back on DRAM from ROW BUFFER (WRITEBACK): 1
Number of times data was copied from DRAM to ROW BUFFER (ACTIVATION): 1 (ROW BUFFER update)
Number of times data was written on ROW BUFFER (WRITE):1 (ROW BUFFER update)
Number of times data was read from ROW BUFFER (READ):1

______________________________________________________________________________________________________


Program executed successfully!
